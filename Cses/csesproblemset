CPP Basics:
1.vectors, arrays and their diffs
2.pairs
3.maps(normal, unordered)
4.Sets(normal, unordered, multiset) with diff data_types
5.for above all the do know all related funcs to them
6.Custom functions, comparators working
7.Stack, queue, deque
8.Priority queue (do min, max heaps)

*********************************************************************************************************************************************************
Implementation:
Questions to Revise:
1.N-queen
2.Recursion and Back tracking
3.Gray Code
4.Two knights
*********************************************************************************************************************************************************

Sorting and Searching 

Topics to cover:
1.All sorting Algorithms(Insertion, bubble, selection, quick, Merge, Heap)
2.Binary search (lb, ub)
3.Two-pointers approach
4.Custom Sorting
5.Kadanes Agorithm
*********************************************************************************************************************************************************

Questions to Revise:
1.Missing Coin Sum
2.Collecting Numbers 2
3.Split Largest array sum / array division
4.shortest subarray with sum atleast k
5.Movie Festival
6.josephus problem 2****
*********************************************************************************************************************************************************
dsa
stacks and queues:
1.sliding window max/min using deque(cses)
2.largest rectangle in histogram (leetcode)
*********************************************************************************************************************************************************

1.median of 2 sorted arrays
2.segment tree, fenwick tree implemtation
3.Merge sort implementation
4.DSU implementation
5.Hashing implementation
6.prefix, Z functions
7.Rabin karp Algo, KMP Algo

*********************************************************************************************************************************************************
*** sliding Median, sliding Cost
https://www.geeksforgeeks.org/smallest-subarray-from-a-given-array-with-sum-greater-than-or-equal-to-k/
use this link u will get all the questions related to subarrays
*********************************************************************************************************************************************************
Aho-Corasick Algorithm
*********************************************************************************************************************************************************
Hashing:
*XOR Hashing(USACO)

*********************************************************************************************************************************************************
String algorithms:
*Distinct Subsequences O(n);
*KMP Algo, {Z, Prefix, Manachar} Algorithms
*Polynomial Hashing

*********************************************************************************************************************************************************
Tree algorithms:
Concepts:
*****Do some tree dp questions

*****Rerooting
*Tree distances 1, 2 in CSES
https://codeforces.com/contest/1187/problem/E

blog:
http://codeforces.com/blog/entry/20935

*LCA Template
*Euler path + BIT/seg tree
*Tree Diameter
Problems:

To do:
*counting paths, path queries


*Tree Matching (dp)
*Subtree Queries(Using Segment/ BIT Tree)

*********************************************************************************************************************************************************
Range Queries:
Concept:
*Sparse Table
*BIT Tree(try to add dp)
*Segment Tree(try to add dp)
*Subarray queries, bit inversions in cses(kadanes algorithms);


problems:
*Hotel queries
*Subarray Sum queries

To do:
**Distinct value queries

*********************************************************************************************************************************************************
Dynamic Programming

Concepts:
*DP Bitmask
*Digit Dp
******Backtracking of table

Problems:
*LCS
*Increasing subsequence 2
*Edit Distance

*********************************************************************************************************************************************************
Paths/Circuits:
*Read CPH notes(19 chatpter)
*Euler paths, circuits(Hierholzerâ€™s algorithm)
*Hamiltonian path, circuit

*********************************************************************************************************************************************************
Graph Algorithms:
*Flood Fill (path finding also) in 2d matrix
*BFS, DFS(cycle detection, Bipartite all related functions, refer General.cpp)
*Multi source BFS
*Toposort, kahns algo
*Shortest paths
*Spanning Trees
*DSU (union by size, rank)
*Bridges, articulation points
for above refer their respective files, read about their info in cph book
*Successor Paths(similar to LCA)
*********************************************************************************************************************************************************
Quant Prep
https://usaco.guide/gold/combo?lang=cpp
go to expected value section
